labels: {}
annotations: {}

image:
  pullSecrets: []
  pullPolicy: IfNotPresent
  repository: registry.digitalocean.com
  image: prod-nexical/prod-nexical-frontend
  tag: 106a817

roles: {}

serviceAccounts: {}

pvc:
  claims:
    media:
      storageClass: longhorn
      accessMode: ReadWriteMany
      size: 10Gi
  mounts: {}

volumes:
  config: {}
  secret: {}
  host: {}

deployment:
  replicaCount: 1

  revisionHistoryLimit: 1
  updateStrategy:
    type: RollingUpdate

  podSecurityContext: {}
  containerSecurityContext: {}

  priorityClassName: ""
  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []

  nodeSelector: {}
  tolerations: []
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"

  env:
    DOMAIN_NAME: https://nexical.ai

  config:
    - global
  secrets:
    - global

  protocol: HTTP
  port: 5000

  livenessProbe:
    endpoint: "/status"
    failureThreshold: 20
    initialDelaySeconds: 5
    periodSeconds: 6
    successThreshold: 1
    timeoutSeconds: 5

  readinessProbe:
    endpoint: "/status"
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 3
    timeoutSeconds: 5

autoscaling:
  minReplicas: 1
  maxReplicas: 4
  avgCpuUtilization: 70

service:
  type: ClusterIP
  protocol: http
  port: 80

ingress:
  className: ''
  hosts: []
  tls: []
  #   - secretName: origin-cert

services:
  portal:
    image:
      entrypoint: "start-portal"
    pvc:
      mounts:
        "/app/nexical_contracts/private_media": media
    deployment:
      config:
        - global
        - portal
    autoscaling:
      enabled: false
    service:
      enabled: true
    ingress:
      enabled: false
      # hosts:
      #   - host: "command-api.${domain}"
