# Default values for nexical-contracts-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

component: ""
# Override default container command
command: []
# Override default container args
args: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  ## If defined, storageClassName: <storageClassName>
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClassName: longhorn
  annotations: {}
  accessModes:
    - ReadWriteMany
  size: 8Gi
  existingClaim: ''
  subPath: ''

externalDatabase:
  user: ""
  existingSecretName: ""
  existingSecretKey: ""
  password: ""
  host: ""
  port: ""
  db: ""
  databaseUrl: ""

externalRedis:
  user: ""
  existingSecretName: ""
  existingSecretKey: ""
  host: ""
  port: ""

externalServices:
  mailgun:
    existingSecretName: ""
    apiKey: ""

  stripe:
    existingSecretName: ""
    publicApiKey: ""
    secretApiKey: ""
    webhookSecretKey: ""

application:
  existingSecretName: ""
  secretKey: ""
  adminUrl: "__admin__/"
  allowedHosts: ".contracts.nexical.ai"
  webConcurrency: 4

# Extra environment variables
extraEnvVars: []
#  - name: BEARER_AUTH
#    value: true
# ConfigMap containing extra env vars
extraEnvVarsCM: ""
# Secret containing extra env vars
extraEnvVarsSecret: ""
# Array of extra volumes to be added to the deployment (evaluated as template). Requires setting `extraVolumeMounts`
extraVolumes: []
# Array of extra volume mounts to be added to the container (evaluated as template). Normally used with `extraVolumes`.
extraVolumeMounts: []

livenessProbe:
  probe: {}
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

readinessProbe:
  probe: {}
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 5
  successThreshold: 1